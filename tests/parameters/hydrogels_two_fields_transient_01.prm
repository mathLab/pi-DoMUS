subsection Dirichlet boundary conditions
  set IDs and component masks = 0=u;mu % 1=mu
  set IDs and expressions     = 0=0;0;0;(R*T*(log((l0^3-1.)/l0^3) + 1./l0^3 + chi/l0^6) + G*Omega/l0)*(1-t/2) %\
                                1=0;0;0;(R*T*(log((l0^3-1.)/l0^3) + 1./l0^3 + chi/l0^6) + G*Omega/l0)*(1-t)
  set Known component names   = u,u,u,mu
  set Used constants          = R=8.314, T=298.0, l0=1.5, chi=0.1, G=1e4, Omega=1e-5
end
subsection Domain
  set Colorize                      = true
  set Copy boundary to manifold ids = false
  set Copy material to manifold ids = false
  set Create default manifolds      = true
  set Grid to generate              = rectangle
  set Input grid file name          =
  set Manifold descriptors          =
  set Mesh smoothing algorithm      = none
  set Optional Point<spacedim> 1    = 0,0,0
  set Optional Point<spacedim> 2    = 1,1,1
  set Optional double 1             = 1.0
  set Optional double 2             = 0.5
  set Optional double 3             = 1.5
  set Optional int 1                = 1
  set Optional int 2                = 2
  set Optional vector of dim int    = 1,1,1
  set Output grid file name         =
end
subsection Error Tables
  set Compute error            = true
  set Error file format        = tex
  set Error precision          = 3
  set Output error tables      = true
  set Solution names           = u,u,u,mu
  set Solution names for latex = u,u,u,mu
  set Table names              = error
  set Write error files        = false
  subsection Table 0
    set Add convergence rates          = true
    set Extra terms                    = cells,dofs
    set Latex table caption            = error
    set List of error norms to compute = L2,H1;L2,H1;L2,H1;L2,H1
    set Rate key                       =
  end
end
subsection Exact solution
  set Function constants  =
  set Function expression = 0; 0; 0; 0
  set Variable names      = x,y,z,t
end
subsection Forcing terms
  set IDs and component masks =
  set IDs and expressions     =
  set Known component names   = u,u,u,mu
  set Used constants          =
end
subsection Free Swelling Two Fields Transient
  set Block of differential components = 1,0
  set Blocking of the finite element   = u,u,u,mu
  set Finite element space             = FESystem[FE_Q(2)^d-FE_Q(1)]
  set G                                = 1e4
  set Omega                            = 1e-5
  set T                                = 298.0
  set chi                              = 0.1
  set l0                               = 1.5
  set D                                = 1e-3
end
subsection IDA Solver Parameters
  set Absolute error tolerance                      = 1e-4
  set Final time                                    = 0.3
  set Ignore algebraic terms for error computations = false
  set Initial condition Newton max iterations       = 5
  set Initial condition Newton parameter            = 0.33
  set Initial condition type                        = use_y_diff
  set Initial condition type after restart          = use_y_dot
  set Initial step size                             = 1e-3
  set Initial time                                  = 0
  set Maximum number of nonlinear iterations        = 20
  set Maximum order of BDF                          = 5
  set Min step size                                 = 5e-5
  set Relative error tolerance                      = 1e-4
  set Seconds between each output                   = 0.1
  set Show output of time steps                     = true
  set Use local tolerances                          = false
end
subsection IMEX Parameters
  set Absolute error tolerance                     = 0.000001
  set Final time                                   = 1.01
  set Initial time                                 = 0
  set Intervals between outputs                    = 1
  set Maximum number of inner nonlinear iterations = 3
  set Maximum number of outer nonlinear iterations = 20
  set Newton relaxation parameter                  = 1.000000
  set Relative error tolerance                     = 0.000000
  set Step size                                    = 0.050000
  set Update continuously Jacobian                 = true
end
subsection Initial solution
  set Function constants  = R=8.314, T=298.0, l0=1.5, chi=0.1, G=1e4, Omega=1e-5
  set Function expression = 0; 0; 0; (R*T*(log((l0^3-1.)/l0^3) + 1./l0^3 + chi/l0^6) + G*Omega/l0)
  set Variable names      = x,y,z,t
end
subsection Initial solution_dot
  set Function constants  =
  set Function expression = 0; 0; 0; 0
  set Variable names      = x,y,z,t
end
subsection Neumann boundary conditions
  set IDs and component masks =
  set IDs and expressions     =
  set Known component names   = u,u,u,mu
  set Used constants          =
end
subsection Output Parameters
  set Files to save in run directory =
  set Incremental run prefix         =
  set Output format                  = none
  set Output partitioning            = false
  set Problem base name              = solution
  set Solution names                 = u
  set Subdivisions                   = 3
end
subsection Refinement
  set Bottom fraction                        = 0.100000
  set Maximum number of cells (if available) = 0
  set Order (optimize)                       = 2
  set Refinement strategy                    = fraction
  set Top fraction                           = 0.300000
end
subsection Time derivative of Dirichlet boundary conditions
  set IDs and component masks =
  set IDs and expressions     =
  set Known component names   = u,u,u,mu
  set Used constants          =
end
subsection piDoMUS
  set Adaptive refinement                            = true
  set Initial global refinement                      = 0
  set Jacobian solver tolerance                      = 1e-8
  set Number of cycles                               = 1
  set Overwrite Newton's iterations                  = true
  set Print some useful informations about processes = true
  set Time stepper                                   = ida
  set Use direct solver if available                 = true
end
